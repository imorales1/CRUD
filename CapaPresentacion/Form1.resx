<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>